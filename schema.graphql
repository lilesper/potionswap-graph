
type Pair @entity {
  id: ID!
  owner: String!
  createdTx: String!
  nft: String!
  bondingCurveAddress: String!
  assetRecipient: String!
  poolType: BigInt!
  delta: BigInt!
  feeMultiplier: BigDecimal!
  spotPrice: BigInt!
  nftIdInventory: [BigInt!]!
  liquidity: BigInt!
  erc20Contract:String!
}


type Swap @entity {
  id: ID!
  nft: String!
  pair: String!
  txHash: String!
  nftIds: String!
  cost: BigInt
  price: BigInt!
  token:String!
  nftRecipient:String!
  tokenRecipient:String!
  timestamp: BigInt
}


type BondingCurveStatusUpdate @entity {
  id: ID!
  allowed: String
  address: String
}

type AssetRecipientChange @entity {
  id: ID!
  a: Bytes! # address
  pair: String
  timestamp: BigInt
}

type DeltaUpdate @entity {
  id: ID!
  newDelta: BigInt! # uint128
  pair: String
  timestamp: BigInt
}

type FeeUpdate @entity {
  id: ID!
  newFee: BigInt! # uint96
  pair: String
  timestamp: BigInt
}

type NFTWithdrawal @entity {
  id: ID!
  pair: String
  timestamp: BigInt
}

type NFTDeposit @entity {
  id: ID!
  pair: String
  timestamp: BigInt
}

type OwnershipTransferred @entity {
  id: ID!
  newOwner: Bytes! # address
  pair: String
  timestamp: BigInt
}

type SpotPrice @entity {
  id: ID!
  newSpotPrice: BigInt! # uint128
  updateTx: String
  nft: String!
  pair: String
  blockNumber: BigInt
  timestamp: BigInt!
}

type ProtocolFeeMultiplier @entity {
  id: ID!
  protocolFeeMultiplier: BigDecimal!
}

type PoolNFTBuy @entity {
  id: ID!
  ethPaidByPool: BigInt!
  pair: String!
  fee: BigInt!
  protocolFee: BigInt!
  timestamp: BigInt!
  nft: String!
}

type PoolNFTSale @entity {
  id: ID!
  ethReceivedByPool: BigInt!
  pair: String!
  fee: BigInt!
  protocolFee: BigInt!
  timestamp: BigInt!
  nft: String!
}

type TokenDeposit @entity {
  id: ID!
  amountDeposited: BigInt! # uint256
  pair: String
  timestamp: BigInt
}

type TokenWithdrawal @entity {
  id: ID!
  amountWithdrawn: BigInt! # uint256
  pair: String
  timestamp: BigInt
}
